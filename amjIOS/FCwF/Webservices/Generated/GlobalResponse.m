/*
	GlobalResponse.h
	The implementation of properties and methods for the GlobalResponse object.
	Generated by SudzC.com
*/
#import "GlobalResponse.h"

@implementation GlobalResponse
	@synthesize enrollImageCount = _enrollImageCount;
	@synthesize authImageCount = _authImageCount;
	@synthesize eyeDistanceValue = _eyeDistanceValue;
	@synthesize cameraDistanceValue = _cameraDistanceValue;
	@synthesize thresholdValue = _thresholdValue;
	@synthesize message = _message;
	@synthesize result = _result;

	- (id) init
	{
		if(self = [super init])
		{
			self.enrollImageCount = nil;
			self.authImageCount = nil;
			self.eyeDistanceValue = nil;
			self.cameraDistanceValue = nil;
			self.thresholdValue = nil;
			self.message = nil;

		}
		return self;
	}

	+ (GlobalResponse*) createWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return [[[self alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.enrollImageCount = [Soap getNodeValue: node withName: @"enrollImageCount"];
			self.authImageCount = [Soap getNodeValue: node withName: @"authImageCount"];
			self.eyeDistanceValue = [Soap getNodeValue: node withName: @"eyeDistanceValue"];
			self.cameraDistanceValue = [Soap getNodeValue: node withName: @"cameraDistanceValue"];
			self.thresholdValue = [Soap getNodeValue: node withName: @"thresholdValue"];
			self.message = [Soap getNodeValue: node withName: @"message"];
			self.result = [[Soap getNodeValue: node withName: @"result"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"GlobalResponse"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.enrollImageCount != nil) [s appendFormat: @"<enrollImageCount>%@</enrollImageCount>", [[self.enrollImageCount stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.authImageCount != nil) [s appendFormat: @"<authImageCount>%@</authImageCount>", [[self.authImageCount stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.eyeDistanceValue != nil) [s appendFormat: @"<eyeDistanceValue>%@</eyeDistanceValue>", [[self.eyeDistanceValue stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.cameraDistanceValue != nil) [s appendFormat: @"<cameraDistanceValue>%@</cameraDistanceValue>", [[self.cameraDistanceValue stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.thresholdValue != nil) [s appendFormat: @"<thresholdValue>%@</thresholdValue>", [[self.thresholdValue stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.message != nil) [s appendFormat: @"<message>%@</message>", [[self.message stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<result>%@</result>", (self.result)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[GlobalResponse class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		self.enrollImageCount = nil;
		self.authImageCount = nil;
		self.eyeDistanceValue = nil;
		self.cameraDistanceValue = nil;
		self.thresholdValue = nil;
		self.message = nil;
		[super dealloc];
	}

@end
